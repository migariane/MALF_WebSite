a0 <- node("a", distr = "rbern", prob = 0)
Mset <- Mset + action("a0", nodes = a0)
dat <- simcausal::sim(DAG = Mset, actions = c("a1", "a0"), n = 10000000, rndseed = 666, verbose=F)
Mset <- set.targetE(Mset, outcome = "y", param = "a1")
M2y1 <- eval.target(Mset, data = dat)$res                       # P(death with chemo and radio) = 0.0869532
Mset <- set.targetE(Mset, outcome = "y", param = "a0")
M2y0 <- eval.target(Mset, data = dat)$res                       # P(death with chemo) = 0.3253395
Mset <- set.targetE(Mset, outcome = "y", param = "a1-a0")
true_ATE_M2 <- eval.target(Mset, data = dat)$res                # Evaluate true ATE
true_or_M2  <- (0.0869532  /(1-0.0869532))/(0.3253395/(1-0.3253395))
# True Marginal Odds Ratio of Treatment
# True_or_M2  <- (0.0869532  /(1-0.0869532))/(0.3253395/(1-0.3253395))
True_mor_M2 <- M2y1 * (1 - M2y0) / ((1 - M2y1) * M2y0); True_mor_M2
true_or_M2  <- (0.0869532  /(1-0.0869532))/(0.3253395/(1-0.3253395))
true_or_M2
Mset <- set.DAG(M3)
a1 <- node("a", distr = "rbern", prob = 1)
Mset <- Mset + action("a1", nodes = a1)
a0 <- node("a", distr = "rbern", prob = 0)
Mset <- Mset + action("a0", nodes = a0)
dat <- simcausal::sim(DAG = Mset, actions = c("a1", "a0"), n = 10000000, rndseed = 666, verbose=F)
Mset <- set.targetE(Mset, outcome = "y", param = "a1")
M3y1 <- eval.target(Mset, data = dat)$res                       # P(death with chemo and radio) = 0.1830828
Mset <- set.targetE(Mset, outcome = "y", param = "a0")  # P(death with chemo) = 0.3253395
M3y0 <- eval.target(Mset, data = dat)$res
Mset <- set.targetE(Mset, outcome = "y", param = "a1-a0")
True_ATE_M3 <- eval.target(Mset, data = dat)$res
# True Marginal Odds Ratio of Treatment M3
True_mor_M3  <- (0.1830828 /(1-0.1830828))/(0.3253395/(1-0.3253395))
True_mor_M3 <- M3y1 * (1 - M3y0) / ((1 - M3y1) * M3y0); True_mor_M3
(0.1830828 /(1-0.1830828))/(0.3253395/(1-0.3253395))
True_mor_M3 <- M3y1 * (1 - M3y0) / ((1 - M3y1) * M3y0); True_mor_M3[[1]]
True_mor_M3 <- M3y1 * (1 - M3y0) / ((1 - M3y1) * M3y0); True_mor_M3[1]
True_mor_M1 <- M1y1 * (1 - M1y0) / ((1 - M1y1) * M1y0); True_mor_M1[[1]]
True_mor_M2 <- M2y1 * (1 - M2y0) / ((1 - M2y1) * M2y0); True_mor_M2[[1]]
True_mor_M2 <- M2y1 * (1 - M2y0) / ((1 - M2y1) * M2y0); cat("MOR_M2": True_mor_M2[[1]])
True_mor_M2 <- M2y1 * (1 - M2y0) / ((1 - M2y1) * M2y0); cat("MOR_M2:", True_mor_M2[[1]])
True_mor_M3 <- M3y1 * (1 - M3y0) / ((1 - M3y1) * M3y0); cat("MOR_M3:",True_mor_M3[[1]])
(0.2687067   /(1-0.2687067))/(0.3253395/(1-0.3253395))
Mset <- set.DAG(M4)
a1 <- node("a", distr = "rbern", prob = 1)
Mset <- Mset + action("a1", nodes = a1)
a0 <- node("a", distr = "rbern", prob = 0)
Mset <- Mset + action("a0", nodes = a0)
dat <- simcausal::sim(DAG = Mset, actions = c("a1", "a0"), n = 10000000, rndseed = 666, verbose=F)
Mset <- set.targetE(Mset, outcome = "y", param = "a1")
M4y1eval.target(Mset, data = dat)$res                       # P(death with chemo and radio) = 0.2687067
Mset <- set.targetE(Mset, outcome = "y", param = "a0")
M4y0eval.target(Mset, data = dat)$res                       # P(death with chemo) = 0.3253395
Mset <- set.targetE(Mset, outcome = "y", param = "a1-a0")
True_ATE_M4 <- eval.target(Mset, data = dat)$res            # Evaluate true ATE
# True Marginal Odds Ratio of Treatment M3
# True_mor_M4  <- (0.2687067   /(1-0.2687067))/(0.3253395/(1-0.3253395))
True_mor_M4 <- M4y1 * (1 - M4y0) / ((1 - M4y1) * M4y0); cat("MOR_M4:",True_mor_M4[[1]])
Mset <- set.DAG(M4)
a1 <- node("a", distr = "rbern", prob = 1)
Mset <- Mset + action("a1", nodes = a1)
a0 <- node("a", distr = "rbern", prob = 0)
Mset <- Mset + action("a0", nodes = a0)
dat <- simcausal::sim(DAG = Mset, actions = c("a1", "a0"), n = 10000000, rndseed = 666, verbose=F)
Mset <- set.targetE(Mset, outcome = "y", param = "a1")
M4y1 <- eval.target(Mset, data = dat)$res                       # P(death with chemo and radio) = 0.2687067
Mset <- set.targetE(Mset, outcome = "y", param = "a0")
M4y0 <- eval.target(Mset, data = dat)$res                       # P(death with chemo) = 0.3253395
Mset <- set.targetE(Mset, outcome = "y", param = "a1-a0")
True_ATE_M4 <- eval.target(Mset, data = dat)$res            # Evaluate true ATE
# True Marginal Odds Ratio of Treatment M3
# True_mor_M4  <- (0.2687067   /(1-0.2687067))/(0.3253395/(1-0.3253395))
True_mor_M4 <- M4y1 * (1 - M4y0) / ((1 - M4y1) * M4y0); cat("MOR_M4:",True_mor_M4[[1]])
R <- 10000
results_reg       <- matrix(NA,ncol=4,nrow=R)
results_g         <- matrix(NA,ncol=4,nrow=R)
for(r in 1:R)try({
cat(paste("This is simulation run number",r, "\n"))
# M1
###########################
Mset <- suppressWarnings(set.DAG(M1, verbose=F))
simdat <- suppressWarnings(simcausal::sim(DAG = Mset, n = 5000, verbose=F)  )
#
results_reg[r,1] <- exp(coefficients(glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)))[2]
#
is1 <- simdat
is1$a <- rep(1,dim(simdat)[1])
is2 <- simdat
is2$a <- rep(0,dim(simdat)[1])
ms1 <- glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)
results_g[r,1] <- ((mean(predict(ms1,type="response",newdata=is1)))/(1-mean(predict(ms1,type="response",newdata=is1))))/((mean(predict(ms1,type="response",newdata=is2)))/(1-mean(predict(ms1,type="response",newdata=is2))))
# M2
##########################
Mset <- suppressWarnings(set.DAG(M2, verbose=F))
simdat <- suppressWarnings(simcausal::sim(DAG = Mset, n = 5000, verbose=F)  )
#
results_reg[r,2] <- exp(coefficients(glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)))[2]
#
is1 <- simdat
is1$a <- rep(1,dim(simdat)[1])
is2 <- simdat
is2$a <- rep(0,dim(simdat)[1])
ms1 <- glm(y ~ a + w1 + w2 + w3 + w4 + a*w2 + a*w3, data=simdat, family=binomial)
results_g[r,2] <- ((mean(predict(ms1,type="response",newdata=is1)))/(1-mean(predict(ms1,type="response",newdata=is1))))/((mean(predict(ms1,type="response",newdata=is2)))/(1-mean(predict(ms1,type="response",newdata=is2))))
# M3
##########################
Mset <- suppressWarnings(set.DAG(M3, verbose=F))
simdat <- suppressWarnings(simcausal::sim(DAG = Mset, n = 5000, verbose=F)  )
#
results_reg[r,3] <- exp(coefficients(glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)))[2]
#
is1 <- simdat
is1$a <- rep(1,dim(simdat)[1])
is2 <- simdat
is2$a <- rep(0,dim(simdat)[1])
ms1 <- glm(y ~ a + w1 + w2 + w3 + w4 + a*w2 + a*w3, data=simdat, family=binomial)
results_g[r,3] <- ((mean(predict(ms1,type="response",newdata=is1)))/(1-mean(predict(ms1,type="response",newdata=is1))))/((mean(predict(ms1,type="response",newdata=is2)))/(1-mean(predict(ms1,type="response",newdata=is2))))
# M4
##########################
Mset <- suppressWarnings(set.DAG(M4, verbose=F))
simdat <- suppressWarnings(simcausal::sim(DAG = Mset, n = 5000, verbose=F)  )
#
results_reg[r,4] <- exp(coefficients(glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)))[2]
#
is1 <- simdat
is1$a <- rep(1,dim(simdat)[1])
is2 <- simdat
is2$a <- rep(0,dim(simdat)[1])
ms1 <- glm(y ~ a + w1 + w2 + w3 + w4 + a*w2 + a*w3, data=simdat, family=binomial)
results_g[r,4] <- ((mean(predict(ms1,type="response",newdata=is1)))/(1-mean(predict(ms1,type="response",newdata=is1))))/((mean(predict(ms1,type="response",newdata=is2)))/(1-mean(predict(ms1,type="response",newdata=is2))))
##########################
})
R <- 10000
results_reg       <- matrix(NA,ncol=4,nrow=R)
results_g         <- matrix(NA,ncol=4,nrow=R)
for(r in 1:R)try({
if (r%%10 == 0) cat(paste("This is simulation run number",r, "\n"))
# M1
###########################
Mset <- suppressWarnings(set.DAG(M1, verbose=F))
simdat <- suppressWarnings(simcausal::sim(DAG = Mset, n = 5000, verbose=F)  )
#
results_reg[r,1] <- exp(coefficients(glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)))[2]
#
is1 <- simdat
is1$a <- rep(1,dim(simdat)[1])
is2 <- simdat
is2$a <- rep(0,dim(simdat)[1])
ms1 <- glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)
results_g[r,1] <- ((mean(predict(ms1,type="response",newdata=is1)))/(1-mean(predict(ms1,type="response",newdata=is1))))/((mean(predict(ms1,type="response",newdata=is2)))/(1-mean(predict(ms1,type="response",newdata=is2))))
# M2
##########################
Mset <- suppressWarnings(set.DAG(M2, verbose=F))
simdat <- suppressWarnings(simcausal::sim(DAG = Mset, n = 5000, verbose=F)  )
#
results_reg[r,2] <- exp(coefficients(glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)))[2]
#
is1 <- simdat
is1$a <- rep(1,dim(simdat)[1])
is2 <- simdat
is2$a <- rep(0,dim(simdat)[1])
ms1 <- glm(y ~ a + w1 + w2 + w3 + w4 + a*w2 + a*w3, data=simdat, family=binomial)
results_g[r,2] <- ((mean(predict(ms1,type="response",newdata=is1)))/(1-mean(predict(ms1,type="response",newdata=is1))))/((mean(predict(ms1,type="response",newdata=is2)))/(1-mean(predict(ms1,type="response",newdata=is2))))
# M3
##########################
Mset <- suppressWarnings(set.DAG(M3, verbose=F))
simdat <- suppressWarnings(simcausal::sim(DAG = Mset, n = 5000, verbose=F)  )
#
results_reg[r,3] <- exp(coefficients(glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)))[2]
#
is1 <- simdat
is1$a <- rep(1,dim(simdat)[1])
is2 <- simdat
is2$a <- rep(0,dim(simdat)[1])
ms1 <- glm(y ~ a + w1 + w2 + w3 + w4 + a*w2 + a*w3, data=simdat, family=binomial)
results_g[r,3] <- ((mean(predict(ms1,type="response",newdata=is1)))/(1-mean(predict(ms1,type="response",newdata=is1))))/((mean(predict(ms1,type="response",newdata=is2)))/(1-mean(predict(ms1,type="response",newdata=is2))))
# M4
##########################
Mset <- suppressWarnings(set.DAG(M4, verbose=F))
simdat <- suppressWarnings(simcausal::sim(DAG = Mset, n = 5000, verbose=F)  )
#
results_reg[r,4] <- exp(coefficients(glm(y ~ a + w1 + w2 + w3 + w4, data=simdat, family=binomial)))[2]
#
is1 <- simdat
is1$a <- rep(1,dim(simdat)[1])
is2 <- simdat
is2$a <- rep(0,dim(simdat)[1])
ms1 <- glm(y ~ a + w1 + w2 + w3 + w4 + a*w2 + a*w3, data=simdat, family=binomial)
results_g[r,4] <- ((mean(predict(ms1,type="response",newdata=is1)))/(1-mean(predict(ms1,type="response",newdata=is1))))/((mean(predict(ms1,type="response",newdata=is2)))/(1-mean(predict(ms1,type="response",newdata=is2))))
##########################
})
# Estimating BIAS classic naive regression analysis versus G-Methods based on G-Formula
BIAS_reg <- abs(apply(results_reg,2,mean)-c(True_mor_M1,True_mor_M2,True_mor_M3,True_mor_M4))
BIAS_g   <- abs(apply(results_g,2,mean)-c(True_mor_M1,True_mor_M2,True_mor_M3,True_mor_M4))
pdf("bias.pdf", width=8)
plot(NA,xlab="Setting",ylab="|Bias|",cex.lab=1.5,lwd=2,axes=F,ylim=c(-0.001,0.12), xlim=c(0.8,4.2))
axis(side = 1, at = c(1,2,3,4),labels=c("no EM","some EM","EM","strong EM"))
axis(side = 2, at = c(0,0.02,0.04,0.06,0.08,0.1,0.12),las=1)   # ),labels=c("","2%","4%","6%","8%","10%","12%"))
title(main = "Absolute bias with respect to \n the marginal causal odds ratio")
abline(h=0,lwd=2,lty=2,col="blue")
lines(c(1,2,3,4),BIAS_reg, type="p",cex=2,lwd=2,col="red",pch=18)
lines(c(1,2,3,4),BIAS_g, type="p",cex=2,lwd=2,col="black",pch=17)
legend("topleft",c("logistic regression","G-Formula"),col=c("red","black"),pch=c(18,17),cex=1.5,bty="n")
dev.off()
pdf("Figure 1.pdf", width = 8)
plot(NA, xlab = "Setting",ylab = "|Bias|", cex.lab = 1.5, lwd = 2,axes = F,ylim = c(-0.001, 0.12), xlim = c(0.8,4.2))
axis(side = 1, at = c(1,2,3,4),labels = c("no EM", "some EM", "EM", "strong EM"))
axis(side = 2, at = c(0,0.02,0.04,0.06,0.08,0.1,0.12),las = 1)   # ),labels=c("","2%","4%","6%","8%","10%","12%"))
title(main = "Absolute bias with respect to \n the marginal causal odds ratio")
abline(h = 0,lwd = 2,lty = 2,col = "blue")
lines(c(1,2,3,4), BIAS_reg, type = "p",cex = 2, lwd = 2,col = "red", pch = 18)
lines(c(1,2,3,4), BIAS_g, type = "p",cex = 2, lwd = 2,col = "black", pch = 17)
legend("topleft",c("Multivariable Logistic Regression", "G-Formula: G-Computation"),col = c("red", "black"), pch = c(18,17), cex = 1.5,bty = "n")
dev.off()
install.packages("drat")
drat::addRepo("OHDSI")
install.packages("PatientLevelPrediction")
PatientLevelPrediction::checkPlpInstallation()
PatientLevelPrediction::checkPlpInstallation()
addinmanager:::addin_manager()
install.packages("rticles")
?pandoc
install.packages("rmarkdown")
install.packages("rmarkdown")
?rmarkdown::pandoc_available
?rmarkdown::pandoc_available
pandoc_available(version = NULL, error = FALSE)
## Not run:
library(rmarkdown)
if (pandoc_available())
cat("pandoc", as.character(pandoc_version()), "is available!\n")
if (pandoc_available("1.12.3"))
cat("required version of pandoc is available!\n")
## End(Not run)
install.packages("pandoc")
install.pandoc()
library(installr)
library(installR)
install.pandoc()
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr
# Installing pandoc
install.pandoc()
install.pandoc()
library(installR)
library(installR)
sys.info()
library(survtmle)
install.packages("survtmle")
library(readr)
SURVTMLE <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
View(SURVTMLE)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 15
W <- subset(W1,W2,W3,W4,W5,W6,W7)
attach(data)
W <- subset(W1,W2,W3,W4,W5,W6,W7)
W <- subset(data, W1,W2,W3,W4,W5,W6,W7)
W <- subset(data, W1, W2, W3, W4, W5, W6, W7)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + trt + t",
glm.ctime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + t", method = "hazard",
t0 = t_0)
n <- 100
t_0 <- 10
W <- data.frame(W1 = runif(n), W2 = rbinom(n, 1, 0.5))
A <- rbinom(n, 1, 0.5)
T <- rgeom(n,plogis(-4 + W$W1 * W$W2 - A)) + 1
C <- rgeom(n, plogis(-6 + W$W1)) + 1
ftime <- pmin(T, C)
ftype <- as.numeric(ftime == T)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 15
attach(data)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + trt + t",
glm.ctime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 15
attach(data)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + trt + t",
glm.ctime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 15
attach(data)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + trt + t",
glm.ctime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 15
attach(data)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + trt + t",
glm.ctime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 15
attach(data)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + trt + t",
glm.ctime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 15
attach(data)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + trt + t",
glm.ctime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + t", method = "hazard",
t0 = t_0)
tpfit <- timepoints(fit, times = seq_len(t_0))
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + trt + t",
glm.ctime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + t", method = "hazard",
t0 = t_0)
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + W2 + W3 + W4 + W5 + W6 + W7 + trt + t",
glm.ctime = "W1 + t", method = "hazard",
t0 = t_0)
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "W1 + trt + t",
glm.ctime = "W1 + t", method = "hazard",
t0 = t_0)
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 10
attach(data)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
# extract cumulative incidence at each timepoint
tpfit <- timepoints(fit, times = seq_len(t_0))
# examine output
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 10
attach(data)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
# extract cumulative incidence at each timepoint
tpfit <- timepoints(fit, times = seq_len(t_0))
# examine output
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
A <- A
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "I(W1 + W2) + trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
A <- A
ftime <- ftime
ftype <- ftype
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "I(W1 + W2) + trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
devtools::install_github("benkeser/survtmle")
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 10
attach(data)
W <- subset(data, select=c(W1, W2, W3, W4, W5, W6, W7))
A <- A
ftime <- ftime
ftype <- ftype
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "I(W1 + W2) + trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 10
attach(data)
W <- subset(data, select=c(W1, W2, W3))
A <- A
ftime <- ftime
ftype <- ftype
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "I(W1 + W2) + trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 10
attach(data)
W <- subset(data, select=c(W1, W2))
A <- A
ftime <- ftime
ftype <- ftype
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "I(W1 + W2) + trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 10
attach(data)
W <- subset(data, select=c(W4, W5))
A <- A
ftime <- ftime
ftype <- ftype
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "I(W4 + W5) + trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
library(survtmle)
library(readr)
data <- read_csv("Dropbox/MLEE_LMR/Localised stage grade 1-2 FL radiotherapy/Data_file/SURVTMLE.csv")
t_0 <- 10
attach(data)
W <- subset(data, select=c(W4, W5))
A <- A
ftime <- ftime
ftype <- ftype
# apply survtmle for estimation
fit <- survtmle(ftime = ftime, ftype = ftype,
trt = A, adjustVars = W,
glm.trt = "1",
glm.ftime = "trt + t",
glm.ctime = "t", method = "hazard",
t0 = t_0)
